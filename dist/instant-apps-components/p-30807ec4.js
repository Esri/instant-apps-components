import{s as e,e as t}from"./p-578d8a5f.js";import"./p-e510b9d9.js";let s;function r(r,n){let a=n.responseType;a?"array-buffer"!==a&&"blob"!==a&&"json"!==a&&"native"!==a&&"native-request-init"!==a&&"text"!==a&&(a="text"):a="json",n.responseType=a;const o=t(n.signal);return delete n.signal,globalThis.invokeStaticMessage("request",{url:r,options:n},{signal:o}).then((async t=>{let i,l,u,c,b;if(t.data)if(t.data instanceof ArrayBuffer){if(!("json"!==a&&"text"!==a&&"blob"!==a||(i=new Blob([t.data]),"json"!==a&&"text"!==a||(s||(s=new FileReaderSync),c=s.readAsText(i),"json"!==a)))){try{l=JSON.parse(c||null)}catch(t){const s={...t,url:r,requestOptions:n};throw new e("request:server",t.message,s)}if(l.error){const t={...l.error,url:r,requestOptions:n};throw new e("request:server",l.error.message,t)}}}else"native"===a&&(t.data.signal=o,u=await fetch(t.data.url,t.data));switch(a){case"blob":b=i;break;case"json":b=l;break;case"native":b=u;break;case"text":b=c;break;default:b=t.data}return{data:b,requestOptions:n,ssl:t.ssl,url:r}}))}export{r as execute}